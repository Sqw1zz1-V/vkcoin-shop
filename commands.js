
const bot = require('./libs/vk.js');
const vkcoin = require('./libs/vkcoin.js');
const qiwi = require('./libs/qiwi.js');
const exchangeRates = require('./libs/exchangeRates.js');
const { qiwi: { phone } } = require('./libs/config.js');

const { PrivateKeyboard, redirectKeyboard, cancelKeyboard } = require('./utils/keyboard.js');
const { utils } = require('./utils/functions.js');

module.exports = [	
    {
       tag: ['–Ω–∞—á–∞—Ç—å', '–º–µ–Ω—é'],
       button: ['start'],
       
       type: 'TYPE_PRIVATE',
       
       async execute(context, { thisUser }) {
           await context.send('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã', { 
               keyboard: PrivateKeyboard(thisUser)
           })
       }
   },


    {
        tag: ['–∫—É–ø–∏—Ç—å'],
        button: ['buy'],
        
        type: 'TYPE_PRIVATE',
        
        async execute(context, { thisUser }) {
            const vkcoinBalance = await vkcoin.api.getMyBalance();
            const { text: amount } = await context.question(
                '–î–ª—è –ø–æ–∫—É–ø–∫–∏ –≤–≤–µ–¥–∏ —Å—É–º–º—É –∫–æ–∏–Ω–æ–≤ –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏.\n\n' +
                `–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å: ${exchangeRates.course.buy} ‚ÇΩ\n` + 
                `–î–æ—Å—Ç—É–ø–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${utils.split(vkcoinBalance)} VKC`,
                { keyboard: cancelKeyboard }
            );

            if(!amount || isNaN(amount)) return context.send('–î–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã –ø–æ–∫—É–ø–∫–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞.', { keyboard: PrivateKeyboard(thisUser) });

            else if(amount > vkcoinBalance) return context.send('–î–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–∏–Ω–æ–≤ —É –Ω–∞—Å –Ω–µ—Ç :(', { keyboard: PrivateKeyboard(thisUser) });
        
            const rubles = (+amount / 1e6 * exchangeRates.course.buy).toFixed(2);
            const shortUrl = (await bot.api.utils.getShortLink({ 
                url: `https://qiwi.com/payment/form/99?currency=643&extra[%27account%27]=${phone}&amountInteger=${rubles.toString().split('.')[0]}&amountFraction=00&extra[%27comment%27]${context.senderId}&blocked[0]=comment&blocked[1]=account`
            })).short_url;

            await context.send(
                '–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –æ–ø–ª–∞—Ç–∏—Ç—å!\n\n' +
                `–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: ${rubles} ‚ÇΩ\n` + 
                `–û–ø–ª–∞—Ç–∏—Ç—å: ${shortUrl}`,
                { 
                    keyboard: redirectKeyboard('–û–ø–ª–∞—Ç–∏—Ç—å', shortUrl)
                }
            );
        }
    },

    {
        tag: ['–ø—Ä–æ–¥–∞—Ç—å'],
        button: ['sell'],
        
        type: 'TYPE_PRIVATE',
        
        async execute(context, { thisUser }) {
            if(thisUser.qiwi) return context.send('–î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∫–æ–∏–Ω–æ–≤ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –∫–æ—à–µ–ª–µ–∫.');

            const qiwiBalance = (await qiwi.getBalance()).accounts[0].balance.amount;
            const { text: amount } = await context.question(
                '–î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤–≤–µ–¥–∏ —Å—É–º–º—É –∫–æ–∏–Ω–æ–≤ –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—à—å –ø—Ä–æ–¥–∞—Ç—å.\n\n' +
                `–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å: ${exchangeRates.course.sell} ‚ÇΩ\n` + 
                `–î–æ—Å—Ç—É–ø–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${utils.split(qiwiBalance)} ‚ÇΩ (~${utils.split(qiwiBalance / exchangeRates.course.sell * 1e6)} VKC)`,
                { keyboard: cancelKeyboard }
            );
            
            if(!amount || isNaN(amount)) return context.send('–î–ª—è –≤–≤–æ–¥–∞ —Å—É–º–º—ã –ø–æ–∫—É–ø–∫–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞.', { keyboard: PrivateKeyboard(thisUser) });
            
            const rubles = (amount / 1e6 * exchangeRates.course.sell * 0.97).toFixed(2);

            if(rubles > qiwiBalance) return context.send('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º—ã –Ω–µ –º–æ–∂–µ–º –∫—É–ø–∏—Ç—å —Ç–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–∏–Ω–æ–≤ :(', { keyboard: PrivateKeyboard(thisUser) });
            else if(rubles < 1) return context.send('–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø—Ä–æ–¥–∞–∂–∏ 1 ‚ÇΩ', { keyboard: PrivateKeyboard(thisUser) });

            const url = await vkcoin.api.getLink(amount * 1000, true);
            const { short_url: shortUrl  } = await bot.api.utils.getShortLink({ 
                url
            });

            await context.send(
                '–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–æ–∏–Ω—ã!!\n\n' +
                `–í–∞–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${utils.split(rubles)} ‚ÇΩ\n` +
                `–û–ø–ª–∞—Ç–∏—Ç—å: ${shortUrl}`,
                { 
                    keyboard: redirectKeyboard('–û–ø–ª–∞—Ç–∏—Ç—å', shortUrl)
                }
            )
        }
    },

    {
        tag: ['–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'],
        button: ['information'],
        
        type: 'TYPE_PRIVATE',
        
        async execute(context, { thisUser }) {
            
        }
    },
]